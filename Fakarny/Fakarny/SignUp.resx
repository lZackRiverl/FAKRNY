<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>